name: Build

on:
  push: { tags: ['**'] }
  pull_request: null

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.17.0 twine

      - if: ${{ startsWith(runner.os, 'macos') }}
        run: brew install libffi
        env:
          PKG_CONFIG_PATH: '/usr/local/opt/libffi/lib/pkgconfig'

      - if: ${{ runner.os == 'ubuntu-latest' }}
        run: apt install -y libffi-devel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD: 'pip install -r setup-requirements.txt'

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish:
    needs: [build_wheels, build_sdist]
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish pypi package
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && ! contains(github.ref, 'rc') }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish test pypi package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'rc')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

    # - name: Create Github Release
    #   if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && ! contains(github.ref, 'rc') }}
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     files: |
    #       dist/*
    #       LICENSE
    #     body_path: CHANGELOG.rst

    # - name: Create draft Github Release
    #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'rc')
    #   uses: softprops/action-gh-release@v2
    #   with:
    #     files: |
    #       dist/*
    #       LICENSE
    #     body_path: CHANGELOG.rst
    #     draft: true
